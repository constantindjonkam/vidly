{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/protectedRoute.jsx","services/genreService.js","services/movieService.js","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/movies.jsx","components/utils/paginate.js","components/navbar.jsx","components/rentals.jsx","components/customers.jsx","components/notfound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/MoviesForm.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","headers","common","http","getJwt","localStorage","getItem","login","email","password","a","data","setItem","loginWithJwt","getCurrentUser","jwtDecode","ex","logout","removeItem","ProtectedRoute","Component","component","render","rest","props","auth","to","pathname","state","from","location","getGenres","movieUrl","id","deleteMovie","movieId","saveMovie","movie","body","_id","TableHeader","renderSort","column","path","sortColumn","order","className","raiseSort","onSort","columns","this","map","key","scope","onClick","label","TableBody","items","generateKey","item","content","_","renderCell","Table","movies","Like","onLike","liked","MoviesTable","title","deleteColumn","onDelete","user","isAdmin","push","Pagination","onPageChange","pageSize","totalItem","currentPage","endPage","Math","ceil","pages","range","aria-label","page","ListGroup","genres","onList","currentGenre","genre","name","Movies","search","handleDelete","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleListGroup","handleSort","handleSearch","input","currentTarget","log","value","length","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","onChange","type","placeholder","NavBar","Fragment","Rentals","Customers","NotFound","Input","htmlFor","Select","options","option","Form","errors","handleValidate","Joi","validate","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","e","preventDefault","doSubmit","handleChange","errorMessage","renderButton","disabled","renderInput","renderSelect","LoginForm","username","string","required","window","onSubmit","register","RegisterForm","minDomainAtoms","min","MoviesForm","genreId","numberInStock","dailyRentalRate","number","integer","max","mapToViewModel","history","match","params","replace","populateGenres","populateMovies","Logout","App","exact","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"gVAMe,EALH,SAACA,GAEXC,QAAQD,MAAMA,I,QCChBE,IAAMC,SAASC,QAAUC,uDAEzBH,IAAMI,aAAaC,SAASC,IAAI,MAAM,SAACR,GAUrC,OAREA,EAAMO,UACNP,EAAMO,SAASE,QAAU,KACzBT,EAAMO,SAASE,OAAS,MAGxBC,EAAWV,GACXW,IAAMX,MAAM,gCAEPY,QAAQC,OAAOb,MAGxB,IAIe,GACbc,IAAKZ,IAAMY,IACXC,KAAMb,IAAMa,KACZC,IAAKd,IAAMc,IACXC,OAAQf,IAAMe,OACdC,OATa,SAACC,GACdjB,IAAMC,SAASiB,QAAQC,OAAO,gBAAkBF,I,iBCdlDG,EAAKJ,OAAOK,KAoBL,SAASA,IACd,OAAOC,aAAaC,QAvBL,SA0BV,IAIQ,GACbC,MA3BgB,uCAAG,WAAOC,EAAOC,GAAd,iBAAAC,EAAA,sEACSP,EAAKP,KANf,QAMiC,CAAEY,QAAOC,aADzC,uBACLT,EADK,EACXW,KADW,kBAEZN,aAAaO,QANL,QAMuBZ,IAFnB,2CAAH,wDA4BhBa,aAvB0B,SAACb,GAC3B,OAAOK,aAAaO,QAVL,QAUuBZ,IAuBtCc,eApB4B,WAC5B,IACE,IAAMd,EAAMK,aAAaC,QAfZ,SAgBb,OAAOS,IAAUf,GACjB,MAAOgB,GACP,OAAO,OAgBTZ,SACAa,OAToB,WACpB,OAAOZ,aAAaa,WA3BL,WCoBFC,EApBQ,SAAC,GAA+C,IAAlCC,EAAiC,EAA5CC,UAAsBC,EAAsB,EAAtBA,OAAWC,EAAW,sCACpE,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,OAAQ,SAACE,GACP,OAAKC,EAAKX,iBASHM,EAAY,kBAACA,EAAcI,GAAYF,EAAOE,GAPjD,kBAAC,IAAD,CACEE,GAAI,CACFC,SAAU,SACVC,MAAO,CAAEC,KAAML,EAAMM,kB,uBCZxBC,EAAY,WACvB,OAAO5B,EAAKR,IAAI,YCClB,SAASqC,EAASC,GAChB,MAAM,GAAN,OAHkB,UAGlB,YAAyBA,GAGpB,IAQMC,EAAc,SAACC,GAC1B,OAAOhC,EAAKL,OAAOkC,EAASG,KAGjBC,EAAY,SAACC,GACxB,IAAMC,EAAI,eAAQD,GAGlB,cAFOC,EAAKC,IAERF,EAAME,IAEDpC,EAAKN,IAAImC,EAASK,EAAME,KAAMD,GAGhCnC,EAAKP,KA3BM,UA2BY0C,ICgBjBE,E,4MA1CbC,WAAa,SAACC,GACZ,OAAIA,EAAOC,OAAS,EAAKnB,MAAMoB,WAAWD,KAAa,KACnB,QAAhC,EAAKnB,MAAMoB,WAAWC,MACjB,uBAAGC,UAAU,mBAEf,uBAAGA,UAAU,qB,EAGtBC,UAAY,SAACL,GACX,IAAME,EAAU,eAAQ,EAAKpB,MAAMoB,YAC/BF,EAAOC,OAASC,EAAWD,KAC7BC,EAAWC,MAA6B,QAArBD,EAAWC,MAAkB,OAAS,OAEzDD,EAAWD,KAAOD,EAAOC,KACzBC,EAAWC,MAAQ,OAErB,EAAKrB,MAAMwB,OAAOJ,I,uDAGV,IAAD,OACCK,EAAYC,KAAK1B,MAAjByB,QAER,OACE,+BACE,4BACGA,EAAQE,KAAI,SAACT,GAAD,OACX,wBACEU,IAAKV,EAAOC,MAAQD,EAAOU,IAC3BN,UAAU,YACVO,MAAM,MACNC,QAAS,kBAAM,EAAKP,UAAUL,KAE7BA,EAAOa,MACP,EAAKd,WAAWC,a,GAlCLtB,a,iBC+BXoC,E,uKA7BH,IAAD,EACoBN,KAAK1B,MAAxBiC,EADD,EACCA,MAAOR,EADR,EACQA,QAETS,EAAc,SAACrB,EAAOK,GAC1B,OAAOL,EAAME,KAAOG,EAAOC,MAAQD,EAAOU,MAS5C,OACE,+BACGK,EAAMN,KAAI,SAACQ,GAAD,OACT,wBAAIP,IAAKO,EAAKpB,KACXU,EAAQE,KAAI,SAACT,GAAD,OACX,wBAAIU,IAAKM,EAAYC,EAAMjB,IAXlB,SAACiB,EAAMjB,GACxB,OAAIA,EAAOkB,QAAgBlB,EAAOkB,QAAQD,GAEnCE,IAAElE,IAAIgE,EAAMjB,EAAOC,MASfmB,CAAWH,EAAMjB,gB,GApBVtB,aCeT2C,EAdD,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,OAAQf,EAA+C,EAA/CA,QAASD,EAAsC,EAAtCA,OAAQH,EAA8B,EAA9BA,MAAaD,GAAiB,EAAvBD,KAAuB,EAAjBC,YACrD,OACE,2BAAOE,UAAU,SACf,kBAAC,EAAD,CACEF,WAAYA,EACZK,QAASA,EACTD,OAAQA,EACRH,MAAOA,IAET,kBAAC,EAAD,CAAWY,MAAOO,EAAQf,QAASA,MCF1BgB,EATF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACtB,OACE,uBACEb,QAASY,EACTpB,UAAWqB,EAAQ,wBAA0B,6BCsDpCC,E,kDAtBb,aAAe,IAAD,uBACZ,gBAhCFnB,QAAU,CACR,CACEW,QAAS,SAACvB,GAAD,OACP,kBAAC,IAAD,CAAMX,GAAE,kBAAaW,EAAME,MAAQF,EAAMgC,QAE3Cd,MAAO,QACPZ,KAAM,SAER,CAAEA,KAAM,aAAcY,MAAO,SAC7B,CAAEZ,KAAM,gBAAiBY,MAAO,SAChC,CAAEZ,KAAM,kBAAmBY,MAAO,QAClC,CACEH,IAAK,OACLQ,QAAS,SAACvB,GAAD,OACP,kBAAC,EAAD,CAAM6B,OAAQ,kBAAM,EAAK1C,MAAM0C,OAAO7B,IAAQ8B,MAAO9B,EAAM8B,WAiBnD,EAZdG,aAAe,CACblB,IAAK,SACLQ,QAAS,SAACvB,GAAD,OACP,4BACEiB,QAAS,kBAAM,EAAK9B,MAAM+C,SAASlC,IACnCS,UAAU,yBAFZ,YAWF,IAAM0B,EAAO/C,EAAKX,iBAFN,OAGR0D,GAAQA,EAAKC,SAAS,EAAKxB,QAAQyB,KAAK,EAAKJ,cAHrC,E,qDAMJ,IAAD,EAC6CpB,KAAK1B,MAAjDwC,EADD,EACCA,OAAQnB,EADT,EACSA,MAAOF,EADhB,EACgBA,KAAMC,EADtB,EACsBA,WAAYI,EADlC,EACkCA,OAEzC,OACE,kBAAC,EAAD,CACEgB,OAAQA,EACRpB,WAAYA,EACZK,QAASC,KAAKD,QACdD,OAAQA,EACRH,MAAOA,EACPF,KAAMA,Q,GAhDYvB,aCqBXuD,EAxBI,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,YACjDC,EAAUC,KAAKC,KAAKJ,EAAYD,GAChCM,EAAQtB,IAAEuB,MAAM,EAAGJ,EAAU,GAEnC,OAAgB,IAAZA,EAAsB,KAGxB,yBAAKK,aAAW,2BACd,wBAAIvC,UAAU,cACXqC,EAAMhC,KAAI,SAACmC,GAAD,OACT,wBACElC,IAAKkC,EACLxC,UAAWwC,IAASP,EAAc,mBAAqB,aAEvD,4BAAQzB,QAAS,kBAAMsB,EAAaU,IAAOxC,UAAU,aAClDwC,UCcAC,EA9BG,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACnC,OACE,yBAAK5C,UAAU,cACb,4BACEQ,QAAS,kBAAMmC,GAAO,IACtB3C,UACG4C,EAEG,yCADA,iDAJR,cAUCF,EAAOrC,KAAI,SAACwC,GAAD,OACV,4BACEvC,IAAKuC,EAAMpD,IACXe,QAAS,kBAAMmC,EAAOE,IACtB7C,UACE4C,IAAiBC,EACb,gDACA,0CAGLA,EAAMC,WC4HFC,E,4MA1IbjE,MAAQ,CACNoC,OAAQ,GACRwB,OAAQ,GACRT,YAAa,EACbF,SAAU,EACVa,cAAc,EACd9C,WAAY,CAAED,KAAM,QAASE,MAAO,OACpCiD,OAAQ,I,EAUVC,aAAe,SAAC1D,GACd,IAAI2B,EAAM,YAAO,EAAKpC,MAAMoC,QAC5BA,EAASA,EAAOgC,QAAO,SAACC,GAAD,OAAOA,IAAM5D,KACpC,EAAK6D,SAAS,CAAElC,WAChB9B,EAAYG,EAAME,M,EAGpB4D,WAAa,SAAC9D,GACZ,IAAM2B,EAAM,YAAO,EAAKpC,MAAMoC,QACxBoC,EAAQpC,EAAOqC,QAAQhE,GAC7B2B,EAAOoC,GAAP,eAAqBpC,EAAOoC,IAE5BpC,EAAOoC,GAAOjC,OAASH,EAAOoC,GAAOjC,MACrC,EAAK+B,SAAS,CAAElC,Y,EAGlBsC,iBAAmB,SAAChB,GAClB,EAAKY,SAAS,CAAEnB,YAAaO,K,EAG/BiB,gBAAkB,SAACZ,GACjB,EAAKO,SAAS,CAAEJ,OAAQ,GAAIJ,aAAcC,EAAOZ,YAAa,K,EAGhEyB,WAAa,SAAC5D,GACZ,EAAKsD,SAAS,CAAEtD,gB,EAGlB6D,aAAe,YAA+B,IAAbC,EAAY,EAA3BC,cAChB7H,QAAQ8H,IAAI,UAEZ,EAAKV,SAAS,CACZR,aAAc,KACdX,YAAa,EACbe,OAAQY,EAAMG,S,wMAxCe9E,I,uBAAjByD,E,EAAN7E,K,SRbHR,EAAKR,IAPM,W,gBQqBFqE,E,EAANrD,KACRuC,KAAKgD,SAAS,CAAElC,WAChBd,KAAKgD,SAAS,CAAEV,W,sIA+CR,IAAD,UACmBtC,KAAKtB,MAAMoC,OAA7B8C,OASJ5D,KAAKtB,OANCmF,EAJH,EAIL/C,OACAa,EALK,EAKLA,SACAE,EANK,EAMLA,YACAS,EAPK,EAOLA,OACAE,EARK,EAQLA,aACA9C,EATK,EASLA,WAGM4B,EAAStB,KAAK1B,MAAdgD,KAEJwC,EAAWD,EAEbC,EADE9D,KAAKtB,MAAMkE,OACFiB,EAAUf,QAAO,SAACC,GAAD,OAC1BA,EAAE5B,MAAM4C,cAAcC,WAAW,EAAKtF,MAAMkE,OAAOmB,kBAG1CvB,EACPqB,EAAUf,QAAO,SAAC3D,GAAD,OAAWA,EAAMsD,MAAMpD,MAAQmD,EAAanD,OAC7DwE,EAGN,IAEM/C,ECjGc,SAACP,EAAO0D,EAAYtC,GAC1C,IAAMuC,GAAcD,EAAa,GAAKtC,EACtC,OAAOhB,IAAEJ,GAAO4D,MAAMD,GAAYE,KAAKzC,GAAUgC,QD+FhCU,CAFA1D,IAAE2D,QAAQR,EAAUpE,EAAWD,KAAMC,EAAWC,OAE/BkC,EAAaF,GAG7C,OACE,6BACE,yBAAK/B,UAAU,OACb,yBAAKA,UAAU,SACb,kBAAC,EAAD,CACE0C,OAAQA,EACRC,OAAQvC,KAAKqD,gBACbb,aAAcA,KAGlB,yBAAK5C,UAAU,OACZ0B,GACC,kBAAC,IAAD,CAAM9C,GAAG,cAAcoB,UAAU,wBAAjC,aAIF,sCACU,gCAASkE,EAASF,QAD5B,2BAGA,2BACEW,SAAUvE,KAAKuD,aACfI,MAAO3D,KAAKtB,MAAMkE,OAClB4B,KAAK,OACL5E,UAAU,oBACVb,GAAG,SACH0F,YAAY,cAEd,kBAAC,EAAD,CACE3D,OAAQA,EACRO,SAAUrB,KAAK6C,aACf7B,OAAQhB,KAAKiD,WACbnD,OAAQE,KAAKsD,WACb5D,WAAYA,IAEd,kBAAC,EAAD,CACEgC,aAAc1B,KAAKoD,iBACnBzB,SAAUA,EACVC,UAAWkC,EAASF,OACpB/B,YAAaA,W,GAlIN3D,aEkDNwG,EAzDA,SAAC,GAAc,IAAZpD,EAAW,EAAXA,KAChB,OACE,yBAAK1B,UAAU,sDACb,kBAAC,IAAD,CAAMpB,GAAG,IAAIoB,UAAU,gBAAvB,SAGA,yBAAKA,UAAU,uBAAuBb,GAAG,aACvC,wBAAIa,UAAU,cACZ,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,WAAjC,WAIF,wBAAIoB,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,cAAjC,cAIF,wBAAIoB,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,YAAjC,aAIA8C,GACA,kBAAC,IAAMqD,SAAP,KACE,wBAAI/E,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,UAAjC,UAIF,wBAAIoB,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,aAAjC,cAML8C,GACC,kBAAC,IAAMqD,SAAP,KACE,wBAAI/E,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,YAC9B8C,EAAKoB,OAGV,wBAAI9C,UAAU,YACZ,kBAAC,IAAD,CAASA,UAAU,WAAWpB,GAAG,WAAjC,gBC1CDoG,EAJC,WACd,OAAO,wCCGMC,EAJG,WAChB,OAAO,0CCGMC,EAJE,WACb,OAAS,2C,gCCeEC,EAhBD,SAAC,GAA2C,IAAzCP,EAAwC,EAAxCA,KAAM9B,EAAkC,EAAlCA,KAAM/G,EAA4B,EAA5BA,MAAO0E,EAAqB,EAArBA,MAAUhC,EAAW,+CACvD,OACE,yBAAKuB,UAAU,cACb,2BAAOoF,QAAStC,GAAOrC,GACvB,2CACMhC,EADN,CAEEmG,KAAMA,EACNzF,GAAI2D,EACJA,KAAMA,EACN9C,UAAU,kBAEXjE,GAAS,yBAAKiE,UAAU,sBAAsBjE,KCKtCsJ,EAhBA,SAAC,GAA8C,IAA5CvC,EAA2C,EAA3CA,KAAarC,GAA8B,EAArC1E,MAAqC,EAA9B0E,OAAO6E,EAAuB,EAAvBA,QAAY7G,EAAW,kDAC3D,OACE,yBAAKuB,UAAU,cACb,2BAAOoF,QAAStC,GAAOrC,GACvB,4CAAYhC,EAAZ,CAAkBqE,KAAMA,EAAM3D,GAAI2D,EAAM9C,UAAU,kBAChD,4BAAQ+D,MAAM,KACbuB,EAAQjF,KAAI,SAACkF,GAAD,OACX,4BAAQjF,IAAKiF,EAAO9F,IAAKsE,MAAOwB,EAAO9F,KACpC8F,EAAOzC,YCmFL0C,E,4MAvFb1G,MAAQ,CAAEjB,KAAM,GAAI4H,OAAQ,I,EAE5BC,eAAiB,WACf,IACQ3J,EAAU4J,IAAIC,SAAS,EAAK9G,MAAMjB,KAAM,EAAKgI,OADrC,CAAEC,YAAY,IACtB/J,MACR,IAAKA,EAAO,OAAO,KAEnB,IALqB,EAKf0J,EAAS,GALM,cAMJ1J,EAAMgK,SANF,IAMrB,2BAAgC,CAAC,IAAxBlF,EAAuB,QAC9B4E,EAAO5E,EAAKhB,KAAK,IAAMgB,EAAKmF,SAPT,8BASrB,OAAOP,G,EAGTQ,iBAAmB,YAAsB,IAAnBlC,EAAkB,EAAlBA,MAAOjB,EAAW,EAAXA,KACrBoD,EAAG,eAAMpD,EAAOiB,GAChB8B,EAAM,eAAM/C,EAAO,EAAK+C,OAAO/C,IAC7B/G,EAAU4J,IAAIC,SAASM,EAAKL,GAA5B9J,MACR,OAAOA,EAAQA,EAAMgK,QAAQ,GAAGC,QAAU,M,EAG5CG,aAAe,SAACC,GACdA,EAAEC,iBAEF,IAAMZ,EAAS,EAAKC,iBACpB,EAAKtC,SAAS,CAAEqC,OAAQA,GAAU,KAC9BA,GAEJ,EAAKa,Y,EAGPC,aAAe,YAA+B,IAAb3C,EAAY,EAA3BC,cACV4B,EAAM,eAAQ,EAAK3G,MAAM2G,QACzBe,EAAe,EAAKP,iBAAiBrC,GACvC4C,EAAcf,EAAO7B,EAAMd,MAAQ0D,SAC3Bf,EAAO7B,EAAMd,MAEzB,IAAMjF,EAAI,eAAQ,EAAKiB,MAAMjB,MAC7BA,EAAK+F,EAAMd,MAAQc,EAAMG,MACzB,EAAKX,SAAS,CAAEvF,OAAM4H,Y,EASxBgB,aAAe,SAAChG,GACd,OACE,4BAAQiG,SAAU,EAAKhB,iBAAkB1F,UAAU,mBAChDS,I,EAKPkG,YAAc,SAAC7D,EAAMrC,GAA0B,IAAnBmE,EAAkB,uDAAX,OAAW,EACnB,EAAK9F,MAAtBjB,EADoC,EACpCA,KAAM4H,EAD8B,EAC9BA,OAEd,OACE,kBAAC,EAAD,CACEd,SAAU,EAAK4B,aACfxC,MAAOlG,EAAKiF,GACZA,KAAMA,EACN8B,KAAMA,EACNnE,MAAOA,EACP1E,MAAO0J,EAAO3C,M,EAKpB8D,aAAe,SAAC9D,EAAMrC,EAAO6E,GAAa,IAAD,EACd,EAAKxG,MAAtBjB,EAD+B,EAC/BA,KAAM4H,EADyB,EACzBA,OAEd,OACE,kBAAC,EAAD,CACEd,SAAU,EAAK4B,aACfxC,MAAOlG,EAAKiF,GACZA,KAAMA,EACNrC,MAAOA,EACP1E,MAAO0J,EAAO3C,GACdwC,QAASA,K,YAlFEhH,aC0CJuI,G,4MAxCb/H,MAAQ,CACNjB,KAAM,CAAEiJ,SAAU,GAAInJ,SAAU,IAChC8H,OAAQ,I,EAGVI,OAAS,CACPiB,SAAUnB,IAAIoB,SAASC,WAAWvG,MAAM,YACxC9C,SAAUgI,IAAIoB,SAASC,WAAWvG,MAAM,a,EAG1C6F,S,sBAAW,gCAAA1I,EAAA,sEAECC,EAAS,EAAKiB,MAAdjB,KAFD,SAGDc,EAAKlB,MAAMI,EAAKiJ,SAAUjJ,EAAKF,UAH9B,OAKCmB,EAAU,EAAKJ,MAAMM,SAArBF,MACRmI,OAAOjI,SAAWF,EAAQA,EAAMC,KAAKF,SAAW,IANzC,gDAQH,KAAGvC,UAAmC,MAAvB,KAAGA,SAASE,UACvBiJ,EADuC,eACzB,EAAK3G,MAAM2G,SACxBqB,SAAW,KAAGxK,SAASuB,KAC9B,EAAKuF,SAAS,CAAEqC,YAXX,yD,uDAiBT,OAAI9G,EAAKX,iBAAyB,kBAAC,IAAD,CAAUY,GAAG,MAG7C,0BAAMsI,SAAU9G,KAAK+F,cACnB,qCACC/F,KAAKuG,YAAY,WAAY,YAC7BvG,KAAKuG,YAAY,WAAY,WAAY,YACzCvG,KAAKqG,aAAa,c,GAnCHjB,GCFX2B,GAAW,SAACzF,GACvB,OAAOrE,EAAKP,KAHM,SAGY,CAC5BY,MAAOgE,EAAKoF,SACZnJ,SAAU+D,EAAK/D,SACfmF,KAAMpB,EAAKoB,QCwCAsE,G,4MAzCbtI,MAAQ,CACNjB,KAAM,CAAEiJ,SAAU,GAAInJ,SAAU,GAAImF,KAAM,IAC1C2C,OAAQ,I,EAGVI,OAAS,CACPiB,SAAUnB,IAAIoB,SACXrJ,MAAM,CAAE2J,eAAgB,IACxBL,WACAvG,MAAM,YACT9C,SAAUgI,IAAIoB,SAASO,IAAI,GAAGN,WAAWvG,MAAM,YAC/CqC,KAAM6C,IAAIoB,SAASC,WAAWvG,MAAM,S,EAGtC6F,S,sBAAW,8BAAA1I,EAAA,+EAEgBuJ,GAAS,EAAKrI,MAAMjB,MAFpC,OAEDvB,EAFC,OAGPqC,EAAKZ,aAAazB,EAASa,QAAQ,iBACnC8J,OAAOjI,SAAW,IAJX,gDAMH,KAAG1C,UAAmC,MAAvB,KAAGA,SAASE,UACvBiJ,EADuC,eACzB,EAAK3G,MAAM2G,SACxBqB,SAAW,KAAGxK,SAASuB,KAC9B,EAAKuF,SAAS,CAAEqC,YATX,yD,uDAeT,OACE,0BAAMyB,SAAU9G,KAAK+F,cACnB,wCACC/F,KAAKuG,YAAY,WAAY,YAC7BvG,KAAKuG,YAAY,WAAY,WAAY,YACzCvG,KAAKuG,YAAY,OAAQ,QACzBvG,KAAKqG,aAAa,iB,GApCAjB,GCmFZ+B,G,4MAlFbzI,MAAQ,CACNjB,KAAM,CACJ4B,IAAK,GACL8B,MAAO,GACPiG,QAAS,GACTC,cAAe,GACfC,gBAAiB,IAEnBjC,OAAQ,GACR/C,OAAQ,I,EAKVmD,OAAS,CACPpG,IAAKkG,IACLpE,MAAOoE,IAAIoB,SAASO,IAAI,GAAGN,WAAWvG,MAAM,SAC5C+G,QAAS7B,IAAIoB,SAASC,WAAWvG,MAAM,SACvCgH,cAAe9B,IAAIgC,SAChBC,UACAN,IAAI,GACJO,IAAI,KACJb,WACAvG,MAAM,mBACTiH,gBAAiB/B,IAAIgC,SAClBL,IAAI,GACJO,IAAI,IACJb,WACAvG,MAAM,sB,EAyBXqH,eAAiB,SAACvI,GAChB,MAAO,CACLE,IAAKF,EAAME,IACX8B,MAAOhC,EAAMgC,MACbiG,QAASjI,EAAMsD,MAAMpD,IACrBgI,cAAelI,EAAMkI,cACrBC,gBAAiBnI,EAAMmI,kB,EAI3BpB,S,sBAAW,sBAAA1I,EAAA,sEACH0B,EAAU,EAAKR,MAAMjB,MADlB,OAET,EAAKa,MAAMqJ,QAAQnG,KAAK,WAFf,2C,iMA/BsB3C,I,gBAAjByD,E,EAAN7E,KACRuC,KAAKgD,SAAS,CAAEV,W,6QAME,SADVrD,EAAUe,KAAK1B,MAAMsJ,MAAMC,OAAO9I,I,iEpBjCrBA,EoBmCoBE,EpBlCpChC,EAAKR,IAAIqC,EAASC,I,gBoBkCPI,E,EAAN1B,KACRuC,KAAKgD,SAAS,CAAEvF,KAAMuC,KAAK0H,eAAevI,K,kDAEtC,KAAGjD,UAAmC,MAAvB,KAAGA,SAASE,QAC7B4D,KAAK1B,MAAMqJ,QAAQG,QAAQ,a,kCpBvCX,IAAC/I,I,+NoB4CrBiB,KAAK+H,iBACL/H,KAAKgI,iB,qIAmBL,OACE,0BAAMlB,SAAU9G,KAAK+F,cACnB,0CACC/F,KAAKuG,YAAY,QAAS,SAC1BvG,KAAKwG,aAAa,UAAW,QAASxG,KAAKtB,MAAM4D,QACjDtC,KAAKuG,YAAY,gBAAiB,mBAClCvG,KAAKuG,YAAY,kBAAmB,QACpCvG,KAAKqG,aAAa,a,GA7EFjB,GCQV6C,G,kLATX1J,EAAKR,SACL8I,OAAOjI,SAAW,M,+BAIlB,OAAO,S,GAPUV,aCoDNgK,I,wNApCbxJ,MAAQ,G,kEAGN,IAAM4C,EAAO/C,EAAKX,iBAClBoC,KAAKgD,SAAS,CAAE1B,W,+BAGR,IACAA,EAAStB,KAAKtB,MAAd4C,KAER,OACE,8BACE,kBAAC,EAAD,CAAQA,KAAMA,IACd,kBAAC,IAAD,MACA,yBAAK1B,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOH,KAAK,YAAYtB,UAAW6I,KACnC,kBAAC,IAAD,CAAOvH,KAAK,SAAStB,UAAWsI,KAChC,kBAAC,IAAD,CAAOhH,KAAK,UAAUtB,UAAW8J,KACjC,kBAAC,EAAD,CAAgB9J,UAAWgJ,GAAY1H,KAAK,gBAC5C,kBAAC,IAAD,CACEA,KAAK,UACLrB,OAAQ,SAACE,GAAD,OAAW,kBAAC,EAAD,iBAAYA,EAAZ,CAAmBgD,KAAMA,QAE9C,kBAAC,IAAD,CAAO7B,KAAK,aAAatB,UAAW0G,IACpC,kBAAC,IAAD,CAAOpF,KAAK,WAAWtB,UAAWyG,IAClC,kBAAC,IAAD,CAAOnF,KAAK,YAAYtB,UAAW2G,IACnC,kBAAC,IAAD,CAAUnG,KAAK,IAAIwJ,OAAK,EAAC3J,GAAG,YAC5B,kBAAC,IAAD,CAAUA,GAAG,qB,GA7BPN,cCNEkK,QACW,cAA7BvB,OAAOjI,SAASyJ,UAEe,UAA7BxB,OAAOjI,SAASyJ,UAEhBxB,OAAOjI,SAASyJ,SAAST,MACvB,2DCTNU,IAASlK,OACP,kBAAC,IAAMmK,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,QAGJC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAArN,GACLC,QAAQD,MAAMA,EAAMiK,c","file":"static/js/main.206fc7f9.chunk.js","sourcesContent":["const init = () => {};\r\nconst log = (error) => {\r\n  // Raven.captureException(error);\r\n  console.error(error);\r\n};\r\n\r\nexport default { init, log };\r\n","import axios from \"axios\";\r\nimport logger from \"./logService\";\r\nimport { toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"An unexpected error occured\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nconst setJwt = (jwt) => {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n};\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport const login = async (email, password) => {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  return localStorage.setItem(tokenKey, jwt);\r\n};\r\n\r\nexport const loginWithJwt = (jwt) => {\r\n  return localStorage.setItem(tokenKey, jwt);\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport const logout = () => {\r\n  return localStorage.removeItem(tokenKey);\r\n};\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  getCurrentUser,\r\n  getJwt,\r\n  logout,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import http from \"./httpService\";\r\n\r\nexport const getGenres = () => {\r\n  return http.get(\"/genres\");\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport const getMovies = () => {\r\n  return http.get(apiEndPoint);\r\n};\r\n\r\nexport const getMovie = (id) => {\r\n  return http.get(movieUrl(id));\r\n};\r\n\r\nexport const deleteMovie = (movieId) => {\r\n  return http.delete(movieUrl(movieId));\r\n};\r\n\r\nexport const saveMovie = (movie) => {\r\n  const body = { ...movie };\r\n  delete body._id;\r\n\r\n  if (movie._id) {\r\n    //update novie\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  //add new movie\r\n  return http.post(apiEndPoint, body);\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  renderSort = (column) => {\r\n    if (column.path !== this.props.sortColumn.path) return null;\r\n    if (this.props.sortColumn.order !== \"asc\")\r\n      return <i className=\"fa fa-sort-asc\"></i>;\r\n\r\n    return <i className=\"fa fa-sort-desc\"></i>;\r\n  };\r\n\r\n  raiseSort = (column) => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (column.path === sortColumn.path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = column.path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map((column) => (\r\n            <th\r\n              key={column.path || column.key}\r\n              className=\"clickable\"\r\n              scope=\"col\"\r\n              onClick={() => this.raiseSort(column)}\r\n            >\r\n              {column.label}\r\n              {this.renderSort(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  render() {\r\n    const { items, columns } = this.props;\r\n\r\n    const generateKey = (movie, column) => {\r\n      return movie._id + (column.path || column.key);\r\n    };\r\n\r\n    const renderCell = (item, column) => {\r\n      if (column.content) return column.content(item);\r\n\r\n      return _.get(item, column.path);\r\n    };\r\n\r\n    return (\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item._id}>\r\n            {columns.map((column) => (\r\n              <td key={generateKey(item, column)}>\r\n                {renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ movies, columns, onSort, order, path, sortColumn }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader\r\n        sortColumn={sortColumn}\r\n        columns={columns}\r\n        onSort={onSort}\r\n        order={order}\r\n      />\r\n      <TableBody items={movies} columns={columns} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ onLike, liked }) => {\r\n  return (\r\n    <i\r\n      onClick={onLike}\r\n      className={liked ? \"clickable fa fa-heart\" : \"clickable fa fa-heart-o\"}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport { Link } from \"react-router-dom\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n      label: \"Title\",\r\n      path: \"title\",\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: (movie) => (\r\n        <Like onLike={() => this.props.onLike(movie)} liked={movie.liked} />\r\n      ),\r\n    },\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-danger btn-sm\"\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, order, path, sortColumn, onSort } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        movies={movies}\r\n        sortColumn={sortColumn}\r\n        columns={this.columns}\r\n        onSort={onSort}\r\n        order={order}\r\n        path={path}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ onPageChange, pageSize, totalItem, currentPage }) => {\r\n  const endPage = Math.ceil(totalItem / pageSize);\r\n  const pages = _.range(1, endPage + 1);\r\n\r\n  if (endPage === 1) return null;\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({ genres, onList, currentGenre }) => {\r\n  return (\r\n    <div className=\"list-group\">\r\n      <button\r\n        onClick={() => onList(false)}\r\n        className={\r\n          !currentGenre\r\n            ? \"list-group-item list-group-item-action active\"\r\n            : \"list-group-item list-group-item-action\"\r\n        }\r\n      >\r\n        All Genres\r\n      </button>\r\n      {genres.map((genre) => (\r\n        <button\r\n          key={genre._id}\r\n          onClick={() => onList(genre)}\r\n          className={\r\n            currentGenre === genre\r\n              ? \"list-group-item list-group-item-action active\"\r\n              : \"list-group-item list-group-item-action\"\r\n          }\r\n        >\r\n          {genre.name}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"./utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    currentGenre: false,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    search: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data: genres } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies });\r\n    this.setState({ genres });\r\n  }\r\n\r\n  handleDelete = (movie) => {\r\n    let movies = [...this.state.movies];\r\n    movies = movies.filter((m) => m !== movie);\r\n    this.setState({ movies });\r\n    deleteMovie(movie._id);\r\n  };\r\n\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleListGroup = (genre) => {\r\n    this.setState({ search: \"\", currentGenre: genre, currentPage: 1 });\r\n  };\r\n\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = ({ currentTarget: input }) => {\r\n    console.log(\"search\");\r\n    //const data = input.value.toUpperCase();\r\n    this.setState({\r\n      currentGenre: null,\r\n      currentPage: 1,\r\n      search: input.value,\r\n    });\r\n  };\r\n\r\n  // getPageData = () => {\r\n  //   const { movies: allMovies, pageSize, currentPage } = this.state;\r\n\r\n  //   return { totalCount: allMovies.length, data: movies };\r\n  // };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n\r\n    const {\r\n      movies: allMovies,\r\n      pageSize,\r\n      currentPage,\r\n      genres,\r\n      currentGenre,\r\n      sortColumn,\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    let filtered = allMovies;\r\n    if (this.state.search) {\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(this.state.search.toLowerCase())\r\n      );\r\n    } else {\r\n      filtered = currentGenre\r\n        ? allMovies.filter((movie) => movie.genre._id === currentGenre._id)\r\n        : allMovies;\r\n    }\r\n\r\n    const sorted = _.orderBy(filtered, sortColumn.path, sortColumn.order);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    //const { totalCount, data: allData } = this.getPageData();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col-3\">\r\n            <ListGroup\r\n              genres={genres}\r\n              onList={this.handleListGroup}\r\n              currentGenre={currentGenre}\r\n            />\r\n          </div>\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link to=\"/movies/new\" className=\"btn btn-primary mb-2\">\r\n                New Movie\r\n              </Link>\r\n            )}\r\n            <p>\r\n              Showing <strong>{filtered.length}</strong> movies in the database\r\n            </p>\r\n            <input\r\n              onChange={this.handleSearch}\r\n              value={this.state.search}\r\n              type=\"text\"\r\n              className=\"form-control my-3\"\r\n              id=\"search\"\r\n              placeholder=\"Search...\"\r\n            />\r\n            <MoviesTable\r\n              movies={movies}\r\n              onDelete={this.handleDelete}\r\n              onLike={this.handleLike}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            />\r\n            <Pagination\r\n              onPageChange={this.handlePageChange}\r\n              pageSize={pageSize}\r\n              totalItem={filtered.length}\r\n              currentPage={currentPage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n\r\n//<i className=\"fa fa-heart-o\"></i>\r\n","import _ from \"lodash\";\r\n\r\nexport const paginate = (items, pageNumber, pageSize) => {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n};\r\n","import React from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n      <Link to=\"/\" className=\"navbar-brand\">\r\n        Vidly\r\n      </Link>\r\n      <div className=\"expand navbar-expand\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/movies\">\r\n              Movies\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/customers\">\r\n              Customers\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <NavLink className=\"nav-link\" to=\"/rentals\">\r\n              Rentals\r\n            </NavLink>\r\n          </li>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/login\">\r\n                  Login\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/register\">\r\n                  Register\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/profile\">\r\n                  {user.name}\r\n                </NavLink>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <NavLink className=\"nav-link\" to=\"/logout\">\r\n                  LogOut\r\n                </NavLink>\r\n              </li>\r\n            </React.Fragment>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h2>Rentals</h2>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h2>Customers</h2>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return ( <h2>Not Found!</h2> );\r\n}\r\n \r\nexport default NotFound;","import React from \"react\";\r\n\r\nconst Input = ({ type, name, error, label, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        {...rest}\r\n        type={type}\r\n        id={name}\r\n        name={name}\r\n        className=\"form-control\"\r\n      />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, error, label, options, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"custom-select\">\r\n        <option value=\"\" />\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  handleValidate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ value, name }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.handleValidate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  // handleSelect = ({ currentTarget: input }) => {\r\n  //   const data = { ...this.state.data };\r\n  //   data[input.name] = input.value;\r\n  //   this.setState({ data });\r\n  // };\r\n\r\n  renderButton = (label) => {\r\n    return (\r\n      <button disabled={this.handleValidate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        name={name}\r\n        type={type}\r\n        label={label}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        onChange={this.handleChange}\r\n        value={data[name]}\r\n        name={name}\r\n        label={label}\r\n        error={errors[name]}\r\n        options={options}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1>Login</h1>\r\n        {this.renderInput(\"username\", \"Username\")}\r\n        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n        {this.renderButton(\"Login\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport const register = (user) => {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name,\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { register } from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email({ minDomainAtoms: 2 })\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string().min(5).required().label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1>Register</h1>\r\n        {this.renderInput(\"username\", \"Username\")}\r\n        {this.renderInput(\"password\", \"Password\", \"password\")}\r\n        {this.renderInput(\"name\", \"Name\")}\r\n        {this.renderButton(\"Register\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { saveMovie, getMovie } from \"../services/movieService\";\r\n\r\nclass MoviesForm extends Form {\r\n  state = {\r\n    data: {\r\n      _id: \"\",\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\",\r\n    },\r\n    errors: {},\r\n    genres: [],\r\n  };\r\n\r\n  // options = getGenres().map((g) => g.name);\r\n\r\n  schema = {\r\n    _id: Joi,\r\n    title: Joi.string().min(3).required().label(\"Title\"),\r\n    genreId: Joi.string().required().label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .integer()\r\n      .min(0)\r\n      .max(100)\r\n      .required()\r\n      .label(\"NUmber in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .min(0)\r\n      .max(10)\r\n      .required()\r\n      .label(\"Daily Rental Rate\"),\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovies() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/notfound\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.populateGenres();\r\n    this.populateMovies();\r\n  }\r\n\r\n  mapToViewModel = (movie) => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate,\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h1>Movie Form</h1>\r\n        {this.renderInput(\"title\", \"Title\")}\r\n        {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n        {this.renderInput(\"numberInStock\", \"Number in stock\")}\r\n        {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n        {this.renderButton(\"Save\")}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesForm;\r\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport { ToastContainer } from \"react-toastify\";\nimport auth from \"./services/authService\";\nimport Movies from \"./components/movies\";\nimport NavBar from \"./components/navbar\";\nimport Rentals from \"./components/rentals\";\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notfound\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport MoviesForm from \"./components/MoviesForm\";\nimport Logout from \"./components/logout\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n//import logo from \"./logo.svg\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <main>\n        <NavBar user={user} />\n        <ToastContainer />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute component={MoviesForm} path=\"/movies/:id\" />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/notfound\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/notfound\" />\n          </Switch>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}